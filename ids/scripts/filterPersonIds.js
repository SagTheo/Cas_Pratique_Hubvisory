// import { people } from '../data/personIdsChunks/personIds_chunk_1.mjs'
import fetch from 'node-fetch'
import fs from 'fs'

// const ids = people()

const ids = [16767, 54768, 54769, 4826, 54770, 16769, 54766, 53836, 54771, 5999, 4828, 54767, 27436, 71416, 27439, 20034, 16403, 2565, 27442, 38244, 24683, 38898, 3110, 3111, 2294, 138, 3116, 3117, 3119, 2545, 37333, 37334, 37335, 3118, 11423, 9042, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3130, 2555, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3141, 3129, 62, 37336, 2042, 52035, 71417, 37, 2044, 2880, 9777, 5724, 12799, 11803, 52422, 801, 34833, 803, 34834, 34835, 867, 875, 891, 901, 902, 914, 917, 919, 15360, 1, 2, 3, 4, 5, 6, 130, 12401, 19801, 491, 7753, 12248, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 22, 23, 5293, 7879, 12914, 153, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37821, 37822, 37823, 37824, 37825, 37827, 37828, 37829, 9640, 37830, 37831, 37832, 36221, 39, 516, 2152, 2154, 2155, 1979, 8210, 8211, 2955, 8212, 8213, 8214, 8215, 8216, 8217, 7414, 8219, 495, 8220, 8221, 8222, 40, 7664, 11025, 11026, 11027, 11028, 11029, 11030, 11031, 11032, 11033, 11034, 11035, 1045, 8504, 1744, 11036, 10153, 3252, 4077, 42, 50, 52, 53, 6146, 6748, 2617, 6749, 1642, 6750, 6751, 6752, 1646, 6121, 6753, 6754, 6755, 6756, 6757, 6758, 1640, 4458, 1174, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 47, 1632, 6794, 6156, 2952, 6795, 6797, 6157, 6796, 48, 49, 51, 54, 55, 56, 4014, 4016, 4017, 4018, 4019, 4020, 4022, 4023, 2070, 17140, 59, 60, 61, 63, 64, 65, 8374, 8375, 8376, 8377, 996, 997, 998, 1113, 1000, 8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 8386, 8387, 8389, 8390, 8392, 8394, 66, 8395, 591, 8396, 7400, 8397, 8398, 2406, 8399, 8400, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 157, 1758, 2350, 20533, 20534, 20535, 20536, 5030, 12320, 12369, 13887, 90, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 2319, 2320, 2321, 2322, 2323, 658, 952, 309, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 86, 92, 95, 188, 114, 120, 45, 44, 43, 122, 116, 118, 1704, 770, 1705, 1706, 1707, 1708, 85, 1709, 378, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 139, 140, 141, 147, 149, 156, 589, 2535, 2536, 2538, 2537, 2539, 2541, 2542, 2544, 3685, 3686, 3687, 4026, 20494, 134, 131, 132, 133, 135, 136, 142, 148, 151, 152, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 182, 3697, 3698, 1776, 8327, 8328, 2870, 2871, 8330, 8331, 8333, 3170, 2872, 7202, 3274, 852, 8337, 3176, 2875, 794, 8339, 8340, 8342, 8344, 123, 8346, 511, 8349, 3084, 3087, 2975, 8350]

const apiKey = '52f72bf521daa8cdd02ef83abfb71e5b'

for await (let id of ids) {
    fetch(`https://api.themoviedb.org/3/person/${id}?api_key=${apiKey}`)
        .then(res => res.json())
        .then(data => {
            if (data.known_for_department === "Acting") {
                const content = data.id + ', '

                fs.writeFile('../data/filteredIds/filteredPersonIds.txt', content, { flag: 'a+' }, err => {
                    if (err) throw err
                })
            }
        })
        .catch(err => console.log(err))
}

